# All local jobs are part of the vanilla universe.
Universe        = vanilla

# We want email if the job completed successfully. This can
# be set to Always, Error, or Never.
Notification    = Never

# The executable we want to run.
Executable   =  /phenix/scratch/belmonrj/SimpleCodeVTX/runmymacro.csh

# The argument to pass to the executable.
#Arguments       = $(Process) 0
Arguments       = 0

# The requirement line specifies which machines we want to
# run this job on.  Any arbitrary classad expression can
# be used.
#Requirements = (CPU_Experiment == "phenix")

# Rank is an expression that states how to rank machines which
# have already met the requirements expression.  Essentially,
# rank expresses preference.  A higher numeric value equals better
# rank.  Condor will give the job the machine with the highest rank.
Rank		= CPU_Speed

# Jobs with higher numerical priority will run before jobs
# with lower numerical priority (-20 to 20).
Priority        = +20

# Used to give jobs a directory with respect to file input
# and output.
Initialdir   = /phenix/scratch/belmonrj/SimpleCodeVTX/

# Input file given to the job.
Input           = /dev/null

# The job's stdout is sent to this file.
Output       = /phenix/scratch/belmonrj/logfiles/vtxsimplecode.out.$(Process)

# The job's stderr is sent to this file.
Error        = /phenix/scratch/belmonrj/logfiles/vtxsimplecode.err.$(Process)

# The condor log file for this job, useful when debuggin
Log          = /phenix/scratch/belmonrj/logfiles/vtxsimplecode.log.$(Process)

# Email address to send notification to.
Notify_user     = javier.orjuelakoop@colorado.edu

# These are job flags which are non-Condor specific.
# The "Experiment" flag should be set to the user's experiment:
# star, phobos, phenix, brahms, atlas, etc.
#+Experiment     = "phenix"

# Since this is an analysis job we set this to "cas".
+Job_Type       = "cas"

# This should be the last command and tells condor to queue the
# job.  If a number is placed after the command (i.e. Queue 15)
# then the job will be submitted N times.  Use the $(Process)
# macro to make your input/output and log files unique.
#Queue 800
Queue 1

